name: CI/CD for nicodb

on:
  push:
    branches:
      - main
  schedule:
    - cron: '30 17 * * *' # UTC 17:30 -> JST 26:30

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: ソースコードをチェックアウト
        uses: actions/checkout@v4

      - name: Python をセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 必要なパッケージをインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: リントを実行
        run: tox

  test:
    runs-on: ubuntu-latest

    steps:
      - name: ソースコードをチェックアウト
        uses: actions/checkout@v4

      - name: Python をセットアップ
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 必要なパッケージをインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 単体テストを実行
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: ソースコードをチェックアウト
        uses: actions/checkout@v4

      - name: Docker にログイン
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Docker Buildx をセットアップ
        uses: docker/setup-buildx-action@v3

      - name: Docker イメージをビルド & プッシュ
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nicodb-django:latest

      - name: サーバーにデプロイ
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/nicodb-django:latest
            docker compose -f ${{ secrets.DOCKER_COMPOSE_FILE }} down
            docker compose -f ${{ secrets.DOCKER_COMPOSE_FILE }} up -d

  notify:
    runs-on: ubuntu-latest
    needs: [lint, test, deploy]
    if: failure()

    steps:
      - name: Slack に通知
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: Workflow Failed
          SLACK_COLOR: danger
          SLACK_MESSAGE: GitHub Actions ワークフローが失敗しました。詳細を確認してください。
